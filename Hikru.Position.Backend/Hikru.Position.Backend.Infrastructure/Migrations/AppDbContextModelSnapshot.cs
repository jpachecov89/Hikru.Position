// <auto-generated />
using System;
using Hikru.Position.Backend.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hikru.Position.Backend.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hikru.Position.Backend.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a79f0c2-f8fd-4a59-ba0c-5096fe7b81fe"),
                            Description = "Responsible for software development, architecture and technical innovation.",
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = new Guid("9a3ba9c6-2549-485e-b111-4a0ffc60c19a"),
                            Description = "Handles branding, digital campaigns, and market research.",
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = new Guid("9f45c02f-dfe2-476d-9ffb-4fda843e8181"),
                            Description = "Manages client relationships and drives revenue growth.",
                            Name = "Sales"
                        },
                        new
                        {
                            Id = new Guid("ff722dd0-1fac-4b5f-8d07-77e43d82fe1f"),
                            Description = "Oversees recruitment, employee well-being and internal policies.",
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = new Guid("3d2897ed-1b11-4f99-b26a-92a3baea5a79"),
                            Description = "Controls budgeting, accounting, and financial reporting.",
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("9bb98dbd-1b21-494a-a9a5-6b7e3967a5dc"),
                            Description = "Leads product vision, roadmap and customer experience.",
                            Name = "Product"
                        },
                        new
                        {
                            Id = new Guid("510a002e-510a-490c-8433-0808bc0215b3"),
                            Description = "Supports clients post-sale and ensures their satisfaction and retention.",
                            Name = "Customer Success"
                        });
                });

            modelBuilder.Entity("Hikru.Position.Backend.Domain.Entities.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RecruiterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1b61dfb-9e82-4bf9-9a68-f86ee8db7031"),
                            Budget = 110000.0,
                            ClosingDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = new Guid("7a79f0c2-f8fd-4a59-ba0c-5096fe7b81fe"),
                            Description = "Responsible for the development of backend services using .NET 8 and Azure Functions.",
                            Location = "Lima, Perú",
                            RecruiterId = new Guid("a1e0a0f3-11a2-4eaa-8bfb-1b4b1f98a111"),
                            Status = 1,
                            Title = "Senior .NET Developer"
                        },
                        new
                        {
                            Id = new Guid("c965a79b-e096-43ee-acea-7a2f71450dc9"),
                            Budget = 85000.0,
                            ClosingDate = new DateTime(2025, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = new Guid("9bb98dbd-1b21-494a-a9a5-6b7e3967a5dc"),
                            Description = "Designing user-centric interfaces for the new SaaS platform.",
                            Location = "Remote - LatAm",
                            RecruiterId = new Guid("b2c1b1e4-22b3-4fbb-9cfc-2c5c2f09b222"),
                            Status = 1,
                            Title = "UX Designer"
                        },
                        new
                        {
                            Id = new Guid("15ef6e40-eb52-4b68-8bf6-b9872fda2db9"),
                            Budget = 65000.0,
                            DepartmentId = new Guid("9a3ba9c6-2549-485e-b111-4a0ffc60c19a"),
                            Description = "Google Ads campaign optimization, SEO, and web analytics.",
                            Location = "Santiago, Chile",
                            RecruiterId = new Guid("c3d2c2f5-33c4-4bcc-adfd-3d6d3a10c333"),
                            Status = 0,
                            Title = "Digital Marketing Analyst"
                        },
                        new
                        {
                            Id = new Guid("0a019559-4cbd-4828-bed9-a2879b74378f"),
                            Budget = 48000.0,
                            ClosingDate = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = new Guid("7a79f0c2-f8fd-4a59-ba0c-5096fe7b81fe"),
                            Description = "Interface development in React and TypeScript. Ideal for beginners.",
                            Location = "Buenos Aires, Argentina",
                            RecruiterId = new Guid("b7f6f6b9-77f8-4bff-bfef-7f0f7a54b777"),
                            Status = 1,
                            Title = "Junior Frontend Developer"
                        },
                        new
                        {
                            Id = new Guid("74727422-18ea-4b75-b3c8-389e8fceb14a"),
                            Budget = 72000.0,
                            ClosingDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = new Guid("3d2897ed-1b11-4f99-b26a-92a3baea5a79"),
                            Description = "Accounting management, reconciliations and monthly reports.",
                            Location = "Lima, Perú",
                            RecruiterId = new Guid("f6f5f5a8-66f7-4aff-dfef-6f9f6a43f666"),
                            Status = 2,
                            Title = "Accounting Specialist"
                        },
                        new
                        {
                            Id = new Guid("4a508dcd-3ca8-4b4c-a53c-bae0a5c4f917"),
                            Budget = 90000.0,
                            ClosingDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = new Guid("ff722dd0-1fac-4b5f-8d07-77e43d82fe1f"),
                            Description = "Talent management, organizational development and work environment.",
                            Location = "Quito, Ecuador",
                            RecruiterId = new Guid("d4e3d3b6-44d5-4bdd-bece-4e7e4a21d444"),
                            Status = 3,
                            Title = "HR Business Partner"
                        },
                        new
                        {
                            Id = new Guid("932b6617-9fff-456b-8713-73cc5a3312d8"),
                            Budget = 100000.0,
                            DepartmentId = new Guid("9f45c02f-dfe2-476d-9ffb-4fda843e8181"),
                            Description = "Sales of corporate software to large clients in Latin America.",
                            Location = "Remote - LatAm",
                            RecruiterId = new Guid("e5f4e4a7-55e6-4dee-cafe-5f8f5a32e555"),
                            Status = 1,
                            Title = "Sales Executive B2B"
                        });
                });

            modelBuilder.Entity("Hikru.Position.Backend.Domain.Entities.Recruiter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seniority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recruiters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1e0a0f3-11a2-4eaa-8bfb-1b4b1f98a111"),
                            Email = "laura.fernandez@hikru.com",
                            Name = "Laura Fernández",
                            Phone = "+51 987 654 321",
                            Seniority = "Senior"
                        },
                        new
                        {
                            Id = new Guid("b2c1b1e4-22b3-4fbb-9cfc-2c5c2f09b222"),
                            Email = "carlos.rojas@hikru.com",
                            Name = "Carlos Rojas",
                            Phone = "+51 984 123 456",
                            Seniority = "Mid"
                        },
                        new
                        {
                            Id = new Guid("c3d2c2f5-33c4-4bcc-adfd-3d6d3a10c333"),
                            Email = "sofia.mendez@hikru.com",
                            Name = "Sofía Méndez",
                            Phone = "+51 982 111 222",
                            Seniority = "Junior"
                        },
                        new
                        {
                            Id = new Guid("d4e3d3b6-44d5-4bdd-bece-4e7e4a21d444"),
                            Email = "jorge.castillo@hikru.com",
                            Name = "Jorge Castillo",
                            Phone = "+51 986 777 888",
                            Seniority = "Senior"
                        },
                        new
                        {
                            Id = new Guid("e5f4e4a7-55e6-4dee-cafe-5f8f5a32e555"),
                            Email = "camila.ruiz@hikru.com",
                            Name = "Camila Ruiz",
                            Phone = "+51 985 222 333",
                            Seniority = "Mid"
                        },
                        new
                        {
                            Id = new Guid("f6f5f5a8-66f7-4aff-dfef-6f9f6a43f666"),
                            Email = "luis.paredes@hikru.com",
                            Name = "Luis Paredes",
                            Phone = "+51 981 444 555",
                            Seniority = "Senior"
                        },
                        new
                        {
                            Id = new Guid("b7f6f6b9-77f8-4bff-bfef-7f0f7a54b777"),
                            Email = "maria.delgado@hikru.com",
                            Name = "María Delgado",
                            Phone = "+51 983 555 666",
                            Seniority = "Junior"
                        });
                });

            modelBuilder.Entity("Hikru.Position.Backend.Domain.Entities.Position", b =>
                {
                    b.HasOne("Hikru.Position.Backend.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hikru.Position.Backend.Domain.Entities.Recruiter", "Recruiter")
                        .WithMany()
                        .HasForeignKey("RecruiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Recruiter");
                });
#pragma warning restore 612, 618
        }
    }
}
